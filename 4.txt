#Name:-Sarthak Pagar
#Roll No.:-40
#Class:-TE(IT)
#Assignment No.4:-Write a program for the Information Retrieval System using appropriate NLP tools (such as NLTK, Open NLP, …) and perform following operations
#a. Text tokenization
#b. Count word frequency
#c. Remove stop words
#d. POS tagging

import nltk

nltk.download('punkt')
nltk.download('punkt_tab')
nltk.download('stopwords')
nltk.download('averaged_perceptron_tagger')
nltk.download('averaged_perceptron_tagger_eng')

from nltk import word_tokenize, FreqDist, pos_tag
from nltk.corpus import stopwords

def text_tokenization(text):
    return word_tokenize(text)

def count_word_frequency(tokens):
    return FreqDist(tokens)

def remove_stop_words(tokens):
    stop_words = set(stopwords.words('english'))
    return [word for word in tokens if word.lower() not in stop_words]

def pos_tagging(tokens):
    return pos_tag(tokens)

# Get user input
text = input("Enter a sentence or a paragraph: ")

# Ask user which operation to perform
operation = input("Select operation (a. Tokenization, b. Word Frequency, c. Remove Stop Words, d. POS Tagging): ").lower()

# Perform the selected operation
if operation == 'a':
    tokens = text_tokenization(text)
    print("Tokens:", tokens)
elif operation == 'b':
    tokens = text_tokenization(text)
    word_frequency = count_word_frequency(tokens)
    print("Word Frequency:", dict(word_frequency))
elif operation == 'c':
    tokens = text_tokenization(text)
    tokens_without_stopwords = remove_stop_words(tokens)
    print("Tokens without Stop Words:", tokens_without_stopwords)
elif operation == 'd':
    tokens = text_tokenization(text)
    pos_tags = pos_tagging(tokens)
    print("POS Tags:", pos_tags)
else:
    print("Invalid operation. Please select a, b, c, or d.")

#Output:-
[nltk_data] Downloading package punkt to
[nltk_data]     C:\Users\sspag\AppData\Roaming\nltk_data...
[nltk_data]   Package punkt is already up-to-date!
[nltk_data] Downloading package punkt_tab to
[nltk_data]     C:\Users\sspag\AppData\Roaming\nltk_data...
[nltk_data]   Package punkt_tab is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\sspag\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
[nltk_data] Downloading package averaged_perceptron_tagger to
[nltk_data]     C:\Users\sspag\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger is already up-to-
[nltk_data]       date!
[nltk_data] Downloading package averaged_perceptron_tagger_eng to
[nltk_data]     C:\Users\sspag\AppData\Roaming\nltk_data...
[nltk_data]   Package averaged_perceptron_tagger_eng is already up-to-
[nltk_data]       date!

Enter a sentence or a paragraph:  Hello everyone, this is my first sentence.
Select operation (a. Tokenization, b. Word Frequency, c. Remove Stop Words, d. POS Tagging):  a
Tokens: ['Hello', 'everyone', ',', 'this', 'is', 'my', 'first', 'sentence', '.']

Enter a sentence or a paragraph:  I like apple, banana, mango and also custard apple.
Select operation (a. Tokenization, b. Word Frequency, c. Remove Stop Words, d. POS Tagging):  b
Word Frequency: {'I': 1, 'like': 1, 'apple': 2, ',': 2, 'banana': 1, 'mango': 1, 'and': 1, 'also': 1, 'custard': 1, '.': 1}

Enter a sentence or a paragraph:  This is only my simple english.
Select operation (a. Tokenization, b. Word Frequency, c. Remove Stop Words, d. POS Tagging):  c
Tokens without Stop Words: ['simple', 'english', '.']

Enter a sentence or a paragraph:  I don't like coding. But i have no other options.
Select operation (a. Tokenization, b. Word Frequency, c. Remove Stop Words, d. POS Tagging):  d
POS Tags: [('I', 'PRP'), ('do', 'VBP'), ("n't", 'RB'), ('like', 'VB'), ('coding', 'VBG'), ('.', '.'), ('But', 'CC'), ('i', 'NNS'), ('have', 'VBP'), ('no', 'DT'), ('other', 'JJ'), ('options', 'NNS'), ('.', '.')]